##get SNPs from region of interest

plink --r2 square --vcf impu_100kb_pdh1.vcf

awk '{print $3}' impu_100kb_pdh1.vcf | tail -n+2  > POS_file.txt

paste POS_file.txt plink.ld > notop.txt

awk '
{ 
    for (i=1; i<=NF; i++)  {
        a[NR,i] = $i
    }
}
NF>p { p = NF }
END {    
    for(j=1; j<=p; j++) {
        str=a[1,j]
        for(i=2; i<=NR; i++){
            str=str" "a[i,j];
        }
        print str
    }
}' POS_file.txt | sed 's/ /\t/g' > LD_100kb.mtx


##GET LD MATRIX REDO

grep -v '#' fin_b51_173kb_only.vcf | awk '{print $3}' > temp_posfile.txt

paste temp_posfile.txt plink.ld > notop.txt

##add line to top row of temp_posfile.txt

awk '{   for (i=1; i<=NF; i++)  {
        a[NR,i] = $i
    }
}
NF>p { p = NF }
END {
    for(j=1; j<=p; j++) {
        str=a[1,j]
        for(i=2; i<=NR; i++){
            str=str" "a[i,j];
        }
        print str
    }
}' notop.txt | paste temp_posfile.txt - | sed 's/ /\t/g' > LD_173kb.mtx

##DONE













##R

library(dbscan)

LD <- fread('data/LD_100kb.mtx') %>% as_tibble() %>% column_to_rownames(var="V1")

db140 <- dbscan(LD, eps = 1, minPts = 40)

db140_tsne_clust <- cbind(LD[,0], db140$cluster, LDtsne) %>% rownames_to_column("POS") %>% rename("cluster" = "db140$cluster", "X" = "1", "Y" = "2")

db140_plot <- ggplot(db140_tsne_clust, aes(x=X, y = Y, colour = as.factor(cluster))) + geom_point() + scale_color_discrete()

write.csv(db140_tsne_clust, file = "db140_SNP_clusters.txt")

##back to bash

sed 's/.*,"//' db140_SNP_clusters.txt | sed 's/",/\t/' | sed 's/,/\t/' > db140_SNP_clust.txt

for i in {1..10}
do echo ${i} | xargs -I [] awk '$2==[] {print $1}' r50_SNP_clust.txt > c${i}_IDs.txt
head -n 1 impu_100kb_pdh1.vcf > c${i}.vcf
grep -f c${i}_IDs.txt impu_100kb_pdh1.vcf >> c${i}.vcf
plink --r2 square --vcf c${i}.vcf --out c${i}
done

#cat *.ld | sed 's/\t/\n/g' | sort -r > allLD.txt
#wc allLD.txt
#awk '$1<0.7' allLD.txt | wc
